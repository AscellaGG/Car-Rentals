@page "/"
@using Car_Rental.Business.Classes;
@using Car_Rental.Common.Enums;
@inject BookingProcessor bp
@inject InputValues InVal

<PageTitle>Index</PageTitle>

<body>

    <header>
        <h1>Car Rentals</h1>
    </header>

    @if(bp.VehicleError.Length > 0)
    {
        <h3 class="alert alert-warning" role="alert">@bp.VehicleError</h3>    
    }
    
    <section class="vehicles p-3 my-4 bg-body rounded-1">
        <h4 class="p-2">Vehicles</h4>

        <table class="table table-hover table-striped vehicleTable">
            <thead>
                <tr>
                    <th scope="col">RegNo</th>
                    <th scope="col">Make</th>
                    <th scope="col">Vehicle Type</th>
                    <th scope="col">Odometer</th>
                    <th scope="col">Cost/km</th>
                    <th scope="col">$/day</th>
                    <th scope="col"></th>
                    <th scope="col">Actions</th>
                    <th scope="col" style="width:100px;">Status</th>
                </tr>
            </thead>
            <tbody>

                <tr>
                    <td><input disabled="@bp.InputDisabled" @bind="InVal.RegNo"></td>
                    <td><input disabled="@bp.InputDisabled" @bind="InVal.Make"></td>
                    <td>
                        <select disabled="@bp.InputDisabled" class="form-select" aria-label="Default select example" @bind="InVal.Type">
                            @foreach(var t in bp.VehicleTypeNames)
                            {
                                <option value="@t">@t.ToString()</option>
                            }
                        </select>
                    </td>
                    <td><input disabled="@bp.InputDisabled" @bind="InVal.Odometer"></td>
                    <td><input type="number" min="0" disabled="@bp.InputDisabled" @bind="InVal.CostKm"></td>
                    <td><input type="number" min="0" disabled="@bp.InputDisabled" @bind="InVal.CostDay"></td>
                    <td></td>
                    <td><button disabled="@bp.InputDisabled" class="btn btn-primary" @onclick="(()=>bp.AddVehicle(InVal))">Add</button></td>
                    <td>
                        @if(bp.InputDisabled)
                        {
                            <p class="car-status bg-warning">Processing...</p>
                        }
                        else
                        {
                            <p></p>
                        }
                    </td>
                </tr>

                @foreach (var v in bp.GetVehicles())
                {
                    <tr>
                        <th>@v.RegNo</th>
                        <td>@v.Make</td>
                        <td>@v.VehicleType</td>
                        <td>@v.Odometer</td>
                        <td>@v.CostKm</td>
                        <td>@v.CostDay</td>
                        
                        @if (v.VehicleStatus == VehicleStatuses.Booked)
                        {
                            <td><input disabled="@bp.InputDisabled" placeholder="Distance" @bind="InVal.DistanceReturned"></td>
                            <td>
                                <button disabled="@bp.InputDisabled" class="btn btn-primary" @onclick="async () =>
                                await bp.ReturnVehicle(v, InVal)">Return</button></td>
                            <td><p class="car-status bg-danger">@v.VehicleStatus</p></td>                            
                        }
                        else
                        {
                            <td>
                                <select disabled="@bp.InputDisabled" class="form-select" aria-label="Default select example" @bind="InVal.SelectedSSN">
                                    <option selected="selected" value="SSN" disabled>SSN</option>
                                    @foreach (var c in bp.GetCustomers())
                                    {
                                        <option value="@c.SSN">@c.SSN, @c.FirstName @c.LastName</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <button disabled="@bp.InputDisabled" type="button" class="btn btn-primary" @onclick="async () =>
                                await bp.RentVehicle(bp.GetPerson(InVal.SelectedSSN), v)">
                                    Rent
                                </button>
                            </td>
                            <td><p class="car-status bg-success">@v.VehicleStatus</p></td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </section>

    <section class="bookings p-3 my-4 bg-body rounded-1">
        <h4 class="p-2">Bookings</h4>

        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th scope="col">RegNo</th>
                    <th scope="col">Customer</th>
                    <th scope="col">Km Rented</th>
                    <th scope="col">Km Returned</th>
                    <th scope="col">Rented</th>
                    <th scope="col">Returned</th>
                    <th scope="col">Cost</th>
                    <th scope="col">Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var b in bp.GetBookings())
                {
                    <tr>
                        <th scope="row">@b.Vehicle.RegNo</th>
                        <td>@b.Customer.LastName, @b.Customer.FirstName (@b.Customer.SSN)</td>
                        <td>@b.KmRented</td>
                        <td>@b.KmReturned</td>
                        <td>@b.DateRented.ToString("yyyy-MM-dd")</td>
                        <td>@(b.DateReturned != null ? b.DateReturned.Value.ToString("yyyy-MM-dd") : "")</td>
                        <td>@b.Cost</td>
                        @if (b.BookingSatus == BookingSatus.Closed)
                        {
                            <td><p class="car-status bg-danger">@b.BookingSatus</p></td>
                        }
                        else
                        {
                            <td><p class="car-status bg-success">@b.BookingSatus</p></td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </section>

    @if (bp.CustomerError.Length > 0)
    {
        <h3 class="alert alert-warning" role="alert">@bp.CustomerError</h3>
    }

    <section class="customers p-3 my-4 bg-body rounded-1">
        <h4 class="p-2">Customers</h4>

        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th scope="col">SSN</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">First Name</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>

                <tr>
                    <td><input @bind="InVal.SSN" type="number" min="0" /></td>
                    <td><input @bind="InVal.LastName"></td>
                    <td><input @bind="InVal.FirstName"></td>
                    <td><button class="btn btn-primary" @onclick="(()=>bp.AddPerson(InVal))">Add</button></td>
                </tr>

                @if(bp.GetCustomers() is not null)
                {
                    @foreach(var c in bp.GetCustomers())
                    {
                        <tr>
                            <th scope="row">@c.SSN</th>
                            <td>@c.LastName</td>
                            <td>@c.FirstName</td>
                            <td></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </section>

</body>
